openapi: 3.0.3
info:
  title: Task scheduling system
  version: 0.1.0
  description: Task scheduling system
paths:
  /api/v1/task/{id}:
    get:
      operationId: v1_task_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      tags:
        - v1
      security:
        - cookieAuth: [ ]
        - basicAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    put:
      operationId: v1_task_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      tags:
        - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
        - cookieAuth: [ ]
        - basicAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    patch:
      operationId: v1_task_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      tags:
        - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTask'
      security:
        - cookieAuth: [ ]
        - basicAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    delete:
      operationId: v1_task_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      tags:
        - v1
      security:
        - cookieAuth: [ ]
        - basicAuth: [ ]
      responses:
        '204':
          description: No response body
  /api/v1/tasks/:
    get:
      operationId: v1_tasks_list
      tags:
        - v1
      security:
        - cookieAuth: [ ]
        - basicAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
    post:
      operationId: v1_tasks_create
      tags:
        - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
        - cookieAuth: [ ]
        - basicAuth: [ ]
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/v1/to-do:
    get:
      operationId: v1_to_do_list
      tags:
        - v1
      security:
        - cookieAuth: [ ]
        - basicAuth: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
components:
  schemas:
    PatchedTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 99
        description:
          type: string
          maxLength: 999
        start_time:
          type: string
          format: date-time
          nullable: true
        end_time:
          type: string
          format: date-time
          nullable: true
        planned_time:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        to_do:
          type: boolean
        created_time:
          type: string
          format: date-time
          readOnly: true
        modified_time:
          type: string
          format: date-time
          readOnly: true
    PriorityEnum:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: |-
        * `0` - Thap
        * `1` - Trung binh
        * `2` - Cao
    StatusEnum:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: |-
        * `0` - Chua lam
        * `1` - Dang lam
        * `2` - Da xong
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 99
        description:
          type: string
          maxLength: 999
        start_time:
          type: string
          format: date-time
          nullable: true
        end_time:
          type: string
          format: date-time
          nullable: true
        planned_time:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        to_do:
          type: boolean
        created_time:
          type: string
          format: date-time
          readOnly: true
        modified_time:
          type: string
          format: date-time
          readOnly: true
      required:
        - created_time
        - id
        - modified_time
        - name
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
